@use '../tools/variables' as vars;
@use '../tools/mixins' as mixins;

:root {
  //shell css variables
  --shell-px: 8px;
  //--header-h: 50px;

  @media screen and (min-width: vars.$xs + 1) {
    --shell-px: 16px;
    //--header-h: 70px;

    @media screen and (min-width: vars.$sm + 1) {
      --shell-px: 24px;
      //--header-h: 70px;

      @media screen and (min-width: vars.$lg + 1) {
        --shell-px: 40px;
        //--header-h: 70px;
      }
    }
  }
}

body {
  font-family: 'CeraProRegular', sans-serif;
  scrollbar-gutter: stable;

  &:has(dialog[open]) {
    overflow-y: hidden;
  }
}

//a.button-text {
//  color: vars.$white;
//  background-color: vars.$green;
//  border: none;
//
//  &:hover {
//    background-color: vars.$hover-green;
//  }
//}

dialog[class$='__modal'] {
  inline-size: 100%;
  max-inline-size: 100%;
  block-size: 100vh;
  max-block-size: 100vh;
  padding-inline: 16px;
  padding-block: 16px;
  background-color: vars.$white;
  transform: translateX(100%);
  transition:
    transform 0.2s ease-in-out,
    display 0.2s allow-discrete,
    overlay 0.2s allow-discrete;

  &[open] {
    transform: translateX(0);

    @starting-style {
      transform: translateX(100%);
    }
  }

  &::backdrop {
    backdrop-filter: blur(2px);
  }

  @media screen and (min-width: vars.$xs + 1) {
    inline-size: 50%;
    box-shadow: 0 0 8px 0 vars.$black;
    transform: translateX(200%);

    &[open] {
      transform: translateX(100%);

      @starting-style {
        transform: translateX(200%);
      }
    }

    @media screen and (min-width: vars.$sm + 1) {
      display: none;
    }
  }
}

input[type='checkbox'] {
  appearance: none;
  block-size: 12px;
  inline-size: 12px;
  color: currentColor;
  border: 1px solid currentColor;
  border-radius: 2px;

  &:checked {
    background-color: vars.$green;
  }
}

input[type='search'] {
  &::-webkit-search-cancel-button {
    appearance: none;
    block-size: 20px;
    inline-size: 20px;
    background-image: url('@svg/close.svg');
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
    margin-inline-start: 2px;
    margin-inline-end: 6px;
  }
}

input[type='range'] {
  appearance: none;
  background-color: transparent;
  cursor: pointer;

  &::-webkit-slider-thumb {
    appearance: none;
  }
}

#root {
  position: relative;
  min-block-size: 100vh;
  display: flex;
  @include mixins.flex(null, null, null, column);
}

#overlay {
  position: fixed;
  block-size: 100%;
  inline-size: 100%;
  z-index: 2;
  backdrop-filter: blur(2px);

  @media screen and (min-width: vars.$sm + 1) {
    &:not([hidden]) {
      display: none;
    }
  }
}

#header,
#footer {
  align-content: center;
}

#main {
  position: relative;
  flex-grow: 1;
  @include mixins.flex(null, null, 24px, column);
  padding-block: 12px;
}

[class$='__container'] {
  max-inline-size: vars.$xl;
  margin-inline: auto;
  padding-inline: var(--shell-px);
}

[class$='__logo'] {
  @include mixins.flex(center, null, 6px);
  color: vars.$green;

  &:hover {
    color: vars.$hover-green;
  }
}

[class*='button'] {
  @include mixins.flex(center, center);
  font-family: 'CeraProBold', sans-serif;
  block-size: 36px;
  min-inline-size: 36px;
  border-radius: 6px;
  border-color: currentColor;

  &:disabled {
    color: vars.$hover-gray;
    pointer-events: none;
  }
}

.button-text,
.button-submit {
  padding-inline: 12px;
  border-width: 1px;
  border-style: solid;
}

.button-text {
  color: vars.$green;

  &:hover:not(:disabled) {
    color: vars.$hover-green;
  }
}

.button-submit {
  color: vars.$white;
  background-color: vars.$green;
  border-color: vars.$green;

  &:hover:not(:disabled) {
    background-color: vars.$hover-green;
  }

  &:disabled {
    background-color: transparent;
    border-color: currentColor;
  }
}

.button-icon {
  color: vars.$black;
  background-color: vars.$bg-gray;

  &:hover:not(:disabled) {
    color: vars.$hover-gray;
  }
}
