@use '../../tools/variables' as vars;
@use '../../tools/mixins' as mixins;

.goods-section {
  &__select {
    @include mixins.flex(center, space-between, 12px);
    text-transform: capitalize;
    flex-wrap: wrap;
    font-size: 16px;
  }

  &__tabs {
    @include mixins.flex(null, null, 24px);
    font-weight: 700;
  }

  &__tab {
    padding-block: 4px;
    cursor: pointer;

    input[type='radio'] {
      display: none;
    }

    &:hover {
      color: vars.$hover-gray;
    }

    &:has(input[type='radio']:checked) {
      color: vars.$green;
      border-bottom: 2px solid currentColor;
    }
  }

  &__sort {
    &:hover button {
      color: vars.$hover-gray;
    }

    &::picker(select) {
      inline-size: 105px;
      margin-block-start: 8px;
      padding-block: 6px;
      background-color: vars.$bg-white;
      box-shadow: 0 0 10px 0 vars.$bg-gray;
      border-radius: 6px;
    }

    selectedcontent {
      display: none;
      font-weight: 700;
      padding-inline-start: 16px;
      padding-inline-end: 8px;
    }

    selectedcontent,
    option {
      padding-block: 4px;
      svg {
        width: 18px;
        height: 18px;
      }
    }

    option {
      @include mixins.flex(center, space-between);
      padding-inline-start: 12px;
      padding-inline-end: 6px;
      border-left: 4px solid vars.$bg-white;

      &:not(:checked):hover {
        color: vars.$hover-gray;
        background-color: transparent;
      }

      &:checked {
        color: vars.$green;
        background-color: vars.$white;
        border-color: currentColor;
      }
    }
  }

  @media screen and (min-width: vars.$sm + 1) {
    &__select {
      grid-column: 1/-1;
    }

    @media screen and (min-width: vars.$md + 1) {
      &__select {
        gap: 32px;
      }

      &__tabs {
        gap: 32px;
      }

      &__sort {
        svg:has(+ selectedcontent) {
          display: none;
        }

        selectedcontent {
          @include mixins.flex(center, null, 6px);
        }
      }
    }
  }
}
